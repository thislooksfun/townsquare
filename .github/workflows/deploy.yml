name: Version and release

on:
  push:
    branches:
      - develop

concurrency: ci-${{ github.ref }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: node

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install and Build ðŸ”§
        run: |
          npm ci
          npm run build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: dist

  deploy-server:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}-socket
      PROJECT_ID: townsquare
      SERVICE_ID: sockets
      CREDENTIALS_ID: github
    environment: sockets
    steps:
      - uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get target node version
        id: node_version
        run: |
          version=$(cat .nvmrc | tr -cd '[:digit:]'.)
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_VERSION=${{ steps.node_version.outputs.version }}

      - name: Deploy to Northflank
        uses: northflank/deploy-to-northflank@v1
        with:
          northflank-api-key: ${{ secrets.NORTHFLANK_API_KEY }}
          project-id: ${{ env.PROJECT_ID }}
          service-id: ${{ env.SERVICE_ID }}
          image-path: ${{ steps.meta.outputs.tags }}
          credentials-id: ${{ env.CREDENTIALS_ID }}
